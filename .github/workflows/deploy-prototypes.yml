name: Deploy Prototypes

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: deploy-prototypes
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: |
            prototypes/AppShell/package-lock.json
            prototypes/AppShellWithInputWidget/package-lock.json
            prototypes/InputWidget/package-lock.json
            prototypes/modules-hub/package-lock.json
            prototypes/Profiles/package-lock.json

      - name: Build all prototypes
        run: |
          set -euo pipefail
          prototypes=(AppShell AppShellWithInputWidget InputWidget modules-hub Profiles)
          rm -rf gh-pages
          mkdir -p gh-pages
          cp index.html gh-pages/index.html
          for dir in "${prototypes[@]}"; do
            echo "\nðŸ“¦ Building $dir"
            pushd "prototypes/$dir" >/dev/null
            npm ci
            npm run build -- --base="/spec/${dir}/"
            popd >/dev/null
            mkdir -p "gh-pages/$dir"
            cp -R "prototypes/$dir/dist/." "gh-pages/$dir/"
          done

      - name: Upload static artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: gh-pages

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
